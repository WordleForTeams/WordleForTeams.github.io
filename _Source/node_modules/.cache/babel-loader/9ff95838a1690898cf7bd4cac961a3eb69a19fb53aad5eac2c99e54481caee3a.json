{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wordle\\\\Documents\\\\GitHub\\\\WordleForTeams.github.io\\\\_Source\\\\src\\\\_Keyboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Keyboard = ({\n  onClick,\n  usedLetters\n}) => {\n  const keyboardRow1 = 'QWERTYUIOP';\n  const keyboardRow2 = 'ASDFGHJKL';\n  const keyboardRow3 = 'ZXCVBNM';\n  const rowStyles = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n  const simulateKeyPress = key => {\n    const event = new KeyboardEvent('keydown', {\n      key: key,\n      bubbles: true,\n      cancelable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: rowStyles,\n      children: keyboardRow1.split(\"\").map(letter => /*#__PURE__*/_jsxDEV(KeyboardKey, {\n        letter: letter,\n        onClick: simulateKeyPress,\n        col: usedLetters[letter]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rowStyles,\n      children: keyboardRow2.split(\"\").map(letter => /*#__PURE__*/_jsxDEV(KeyboardKey, {\n        letter: letter,\n        onClick: simulateKeyPress,\n        col: usedLetters[letter]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rowStyles,\n      children: keyboardRow3.split(\"\").map(letter => /*#__PURE__*/_jsxDEV(KeyboardKey, {\n        letter: letter,\n        onClick: simulateKeyPress,\n        col: usedLetters[letter]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Keyboard;\nexport const KeyboardKey = ({\n  onClick,\n  state,\n  letter,\n  col\n}) => {\n  _s();\n  let ss = {\n    padding: \"10px\",\n    width: \"40px\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n    color: \"black\"\n  };\n  ss['background'] = col;\n  useEffect(() => {}, [col]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"5px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClick(letter),\n      style: ss,\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(KeyboardKey, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = KeyboardKey;\nvar _c, _c2;\n$RefreshReg$(_c, \"Keyboard\");\n$RefreshReg$(_c2, \"KeyboardKey\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Keyboard","onClick","usedLetters","keyboardRow1","keyboardRow2","keyboardRow3","rowStyles","display","justifyContent","alignItems","simulateKeyPress","key","event","KeyboardEvent","bubbles","cancelable","children","style","split","map","letter","KeyboardKey","col","fileName","_jsxFileName","lineNumber","columnNumber","_c","state","_s","ss","padding","width","fontSize","fontWeight","color","margin","_c2","$RefreshReg$"],"sources":["C:/Users/Wordle/Documents/GitHub/WordleForTeams.github.io/_Source/src/_Keyboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nexport const Keyboard = ({ onClick, usedLetters}) => {\r\n  const keyboardRow1 = 'QWERTYUIOP';\r\n  const keyboardRow2 = 'ASDFGHJKL'\r\n  const keyboardRow3 = 'ZXCVBNM'\r\n\r\n  const rowStyles = {display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}\r\n\r\n  const simulateKeyPress = (key) => {\r\n    const event = new KeyboardEvent('keydown', {\r\n      key: key,\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div style={rowStyles}>\r\n        {keyboardRow1.split(\"\").map((letter)=><KeyboardKey letter={letter} onClick={simulateKeyPress} col={usedLetters[letter]}/>)}\r\n    </div>\r\n    <div style={rowStyles}>\r\n        {keyboardRow2.split(\"\").map((letter)=><KeyboardKey letter={letter} onClick={simulateKeyPress} col={usedLetters[letter]}/>)}\r\n    </div>\r\n    <div style={rowStyles}>\r\n        {keyboardRow3.split(\"\").map((letter)=><KeyboardKey letter={letter} onClick={simulateKeyPress} col={usedLetters[letter]}/>)}\r\n    </div>\r\n    {/*<div style={rowStyles}>\r\n        {['clear','enter'].map((letter)=><KeyboardKey letter={letter}/>)}\r\n  </div>*/}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport const KeyboardKey = ({onClick, state, letter, col}) => {\r\n    let ss = {padding:\"10px\", width:\"40px\", fontSize:\"1.2rem\", fontWeight:\"bold\", color:\"black\"}\r\n    ss['background']=col\r\n    useEffect(()=>{},[col])\r\n    return (\r\n        <div style={{margin:\"5px\"}}>\r\n          <button\r\n              key={letter}\r\n              onClick={() => onClick(letter)}\r\n              style={ss}\r\n            >\r\n              {letter}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}