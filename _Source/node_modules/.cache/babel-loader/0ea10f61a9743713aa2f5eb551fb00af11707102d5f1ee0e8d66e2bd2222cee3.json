{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wordle\\\\Documents\\\\GitHub\\\\WordleForTeams.github.io\\\\_Source\\\\src\\\\_Row.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Row = ({\n  nums,\n  current,\n  moveNext,\n  setUsed,\n  quest\n}) => {\n  _s();\n  const [word, setWord] = useState(['', '', '', '', '']);\n  const [done, SetDone] = useState(false);\n  const firstInputElement = useRef(null);\n  useEffect(() => {\n    const nextIndex = getNextEmptyBoxIndex(0);\n    if (nextIndex !== -1) {\n      document.getElementById(`letter-input-${nums}${nextIndex}`).focus();\n    }\n  }, [current]);\n  const handleLetterChange = (index, value) => {\n    if (/^[a-zA-Z]$/.test(value)) {\n      const newWord = [...word];\n      newWord[index] = value.toUpperCase();\n      setWord(newWord);\n      const nextIndex = getNextEmptyBoxIndex(index + 1);\n      if (nextIndex !== -1) {\n        document.getElementById(`letter-input-${nums}${nextIndex}`).focus();\n      }\n    }\n  };\n  const handleKeyDown = (index, event) => {\n    if (event.key === 'Backspace') {\n      const newWord = [...word];\n      newWord[index] = '';\n      setWord(newWord);\n      const prevIndex = getPrevBoxIndex(index - 1);\n      if (prevIndex !== -1) {\n        document.getElementById(`letter-input-${nums}${prevIndex}`).focus();\n        newWord[prevIndex] = '';\n      }\n    }\n    if (event.key === 'Enter') {\n      let length = getNextEmptyBoxIndex(0);\n      if (length == -1) {\n        SetDone(true);\n        setUsed(word);\n        moveNext();\n      }\n    }\n  };\n  const getNextEmptyBoxIndex = startIndex => {\n    for (let i = startIndex; i < word.length; i++) {\n      if (word[i] === '') {\n        return i;\n      }\n    }\n    return -1;\n  };\n  const getPrevBoxIndex = startIndex => {\n    for (let i = startIndex; i >= 0; i--) {\n      if (word[i] !== '') {\n        return i;\n      }\n    }\n    return -1;\n  };\n  const onRowClicked = () => {\n    if (nums === current) {\n      const nextIndex = getNextEmptyBoxIndex(0);\n      if (nextIndex !== -1) {\n        document.getElementById(`letter-input-${nums}${nextIndex}`).focus();\n      }\n    }\n  };\n  const guess = index => {\n    if (quest[index] === word[index]) {\n      return 'lightgreen';\n    }\n    if (quest.includes(word[index])) return 'yellow';\n    return 'grey';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-container\",\n      onClick: onRowClicked,\n      children: word.map((letter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: nums === current ? false : true,\n        id: `letter-input-${nums}${index}`,\n        type: \"text\",\n        maxLength: \"1\",\n        value: letter,\n        style: done ? {\n          background: guess(index)\n        } : {},\n        onKeyDown: e => handleKeyDown(index, e),\n        ref: index === 0 ? firstInputElement : null,\n        onChange: e => handleLetterChange(index, e.target.value)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n};\n_s(Row, \"8kj/RiuNarxGKKOUTOMRRspCDT4=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Row","nums","current","moveNext","setUsed","quest","_s","word","setWord","done","SetDone","firstInputElement","nextIndex","getNextEmptyBoxIndex","document","getElementById","focus","handleLetterChange","index","value","test","newWord","toUpperCase","handleKeyDown","event","key","prevIndex","getPrevBoxIndex","length","startIndex","i","onRowClicked","guess","includes","children","className","onClick","map","letter","disabled","id","type","maxLength","style","background","onKeyDown","e","ref","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Wordle/Documents/GitHub/WordleForTeams.github.io/_Source/src/_Row.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport const Row = ({nums, current, moveNext, setUsed, quest}) => {\r\n\r\n    const [word, setWord] = useState(['', '', '', '', '']);\r\n    const [done, SetDone] = useState(false);\r\n    const firstInputElement = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        const nextIndex = getNextEmptyBoxIndex(0);\r\n        if (nextIndex !== -1) {\r\n          document.getElementById(`letter-input-${nums}${nextIndex}`).focus();\r\n        }\r\n      }, [current]);\r\n\r\n    const handleLetterChange = (index, value) => {\r\n      if (/^[a-zA-Z]$/.test(value)) {\r\n        const newWord = [...word];\r\n        newWord[index] = value.toUpperCase();\r\n        setWord(newWord);\r\n        const nextIndex = getNextEmptyBoxIndex(index + 1);\r\n        if (nextIndex !== -1) {\r\n          document.getElementById(`letter-input-${nums}${nextIndex}`).focus();\r\n        }\r\n      }\r\n    };\r\n  \r\n    const handleKeyDown = (index, event) => {\r\n      if (event.key === 'Backspace') {\r\n        const newWord = [...word];\r\n        newWord[index] = '';\r\n        setWord(newWord);\r\n        const prevIndex = getPrevBoxIndex(index - 1);\r\n        if (prevIndex !== -1) {\r\n          document.getElementById(`letter-input-${nums}${prevIndex}`).focus();\r\n          newWord[prevIndex] = '';\r\n        }       \r\n      }\r\n      if(event.key === 'Enter') {\r\n        let length = getNextEmptyBoxIndex(0)\r\n        if(length==-1){\r\n          SetDone(true)\r\n          setUsed(word)\r\n          moveNext()\r\n        }        \r\n      }\r\n    };\r\n  \r\n    const getNextEmptyBoxIndex = (startIndex) => {\r\n      for (let i = startIndex; i < word.length; i++) {\r\n        if (word[i] === '') {\r\n          return i;\r\n        }\r\n      }\r\n      return -1;\r\n    };\r\n  \r\n    const getPrevBoxIndex = (startIndex) => {\r\n      for (let i = startIndex; i >= 0; i--) {\r\n        if (word[i] !== '') {\r\n          return i;\r\n        }\r\n      }\r\n      return -1;\r\n    };\r\n\r\n    const onRowClicked = () => {\r\n        if(nums===current){\r\n            const nextIndex = getNextEmptyBoxIndex(0);\r\n            if (nextIndex !== -1) {\r\n            document.getElementById(`letter-input-${nums}${nextIndex}`).focus();\r\n            }\r\n        }\r\n    }\r\n  \r\n    const guess = (index) => {      \r\n      if (quest[index]===word[index]){\r\n        return 'lightgreen'\r\n      } \r\n      if (quest.includes(word[index])) return 'yellow'\r\n      return 'grey'\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"word-container\" onClick={onRowClicked}>\r\n          {word.map((letter, index) => (\r\n            <input\r\n              key={index}\r\n              disabled={nums===current ? false : true}\r\n              id={`letter-input-${nums}${index}`}\r\n              type=\"text\"\r\n              maxLength=\"1\"\r\n              value={letter}\r\n              style={done ? { background: guess(index)}\r\n                          : {}}\r\n              onKeyDown={(e) => handleKeyDown(index, e)}\r\n              ref={index === 0 ? firstInputElement : null}\r\n              onChange={(e) => handleLetterChange(index, e.target.value)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}